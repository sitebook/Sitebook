<com:TContent ID="body">
	<h1 id="16001">Membangun Pengubah Kurs Sederhana</h1>
	<p id="80053" class="block-content">Tutorial ini memperkenalkan kerangka kerja aplikasi web Prado dan mengajarkan Anda bagaimana untuk
		membangun aplikasi web sederhana dalam beberapa langkah sederhana. Tutorial 
		ini menganggap bahwa Anda terbiasa dengan PHP dan Anda telah mengakses 
		server web yang dapat melayani naskah PHP5.
	</p>

	<p id="80054" class="block-content">Dalam tutorial ini Anda akan membangun aplikasi web sederhana yang mengubah
		nilai dolar ke kurs lain, nilai kurs yang disediakan untuk kurs tersebut relatif terhadap dolar. Aplikasi lengkap ditampilkan di bawah ini.
		<img src=<%~ example2.png %> class="figure" />
		Anda dapat mencoba aplikasi <a href="../currency-converter/index.php">secara lokal</a> atau di
		<a href="http://www.pradosoft.com/demos/currency-converter/">Pradosoft.com</a>.
		Catatan bahwa aplikasi masih berfungsi sama persis apabila  javascript tidak tersedia pada browser pengguna.
	</p>

	<h1 id="download">Men-download dan Menginstalasi Prado</h1>
	<p id="80055" class="block-content">Untuk menginstalasi Prado, cukup download versi terbaru Prado dari
		<a href="http://www.pradosoft.com/">http://www.pradosoft.com</a>
		dan uraikan file ke sebuah direktori yang <b>tidak</b> dapat diakses oleh server web Anda (Anda dapat menguraikannya ke sebuah direktori yang dapat diakses oleh server web jika Anda ingin melihat demo dan pengujian). Untuk instalasi lebih rinci, lihat bimbingan
		<a href="?page=GettingStarted.Installation">Instalasi Cepat</a>.
	</p>

	<h1 id="16002">Membuat Aplikasi web Prado baru</h1>
	<p id="80056" class="block-content">Cara tercepat dan termudah untuk membuat aplikasi web Prado baru adalah menggunakan piranti perintah <tt>prado-cli.php</tt> yang ditemukan dalam direktori <tt>framework</tt>
		pada distribusi Prado.  Kita membuat aplikasi baru dengan menjalankan perintah berikut dalam prompt perintah atau konsol Anda. Perintah membuat direktori baru bernama <tt>currency-converter</tt> dalam direktori kerja Anda saat ini.
		Anda perlu mengubahnya ke direktori yang benar terlebih dahulu.
		Lihat <a href="?page=GettingStarted.CommandLine">Piranti Baris Perintah</a>
		untuk lebih jelasnya.
	</p>
<com:TTextHighlighter Language="text" CssClass="source block-content" id="code111">
php prado/framework/prado-cli.php -c currency-converter
</com:TTextHighlighter>

	<p id="80057" class="block-content">Perintah di atas membuat struktur direktori yang diperlukan dan file minimal (termasuk "index.php" dan "Home.page") untuk menjalankan aplikasi Prado.
		Sekarang Anda dapat mengarahkan url browser Anda ke server web untuk melayani naskah <tt>index.php</tt> dalam direktori <tt>currency-converter</tt>.
		Seharusnya Anda melihat pesan "Welcome to Prado!"
	</p>

	<h1 id="16003">Membuat Antarmuka Pengguna Pengubah Kurs</h1>
	<p id="80058" class="block-content">Kita mulai dengan mengedit file <tt>Home.page</tt> yang ditemukan dalam direktori <tt>currency-converter/protected/pages/</tt>. File yang berakhiran dengan ".page" adalah template halaman yang berisi HTML dan kontrol Prado.
		Kita cukup menambah dua kotak teks, tiga label dan satu tombol seperti berikut.
	</p>
<com:TTextHighlighter Language="prado" CssClass="source block-content" id="form1">
&lt;com:TForm&gt;
    <fieldset>
        <legend>Currency Converter</legend>
        <div class="rate-field">
            &lt;com:TLabel ForControl="currencyRate" Text="Exchange Rate per $1:" /&gt;
            &lt;com:TTextBox ID="currencyRate" /&gt;
        </div>
        <div class="dollar-field">
            &lt;com:TLabel ForControl="dollars" Text="Dollars to Convert:" /&gt;
            &lt;com:TTextBox ID="dollars" /&gt;
        </div>
        <div class="total-field">
            <span class="total-label">Amount in Other Currency:</span>
            &lt;com:TLabel ID="total" CssClass="result" /&gt;
        </div>
        <div class="convert-button">
            &lt;com:TButton Text="Convert" /&gt;
        </div>
    </fieldset>
&lt;/com:TForm&gt;
</com:TTextHighlighter>
	<p id="refresh" class="block-content">
	Jika Anda menyegarkan halaman, Anda akan melihat sesuatu mirip dengan gambar berikut.
	Ia mungkin terlihat tidak cukup bagus atau berurut, tapi kita akan mengubahnya nanti dengan menggunakan CSS.
	<img src=<%~ example1.png %> class="figure" />
	</p>

	<p id="80059" class="block-content">
		Komponen pertama yang kita tambahkan adalah
		<com:DocLink ClassPath="System.Web.UI.TForm" Text="TForm" />
		yang pada dasarnya terkait ke elemen HTML <tt>&lt;form&gt;</tt>.
		Dalam Prado, hanya <b>satu</b> elemen <tt>TForm</tt> dibolehkan per halaman.
	</p>

	<p id="80060" class="block-content">Dua pasang komponen berikutnya yang kita tambahkan adalah
		<com:DocLink ClassPath="System.Web.UI.WebControls.TLabel" Text="TLabel" />
		dan
		<com:DocLink ClassPath="System.Web.UI.WebControls.TTextBox" Text="TTextBox" />
		yang pada dasarnya mendefinisikan sebuah label dan kotak teks bagi pengguna aplikasi
		untuk memasukan nilai pertukaran kurs.
		Nilai properti <tt>ForControl</tt> property menentukan komponen mana label 
		diperuntukan. Ini membolehkan pengguna aplikasi mengklik pada label
		untuk memfokuskan pada field (hal yang baik). Anda mungkin telah menggunakan elemen
		biasa HTML <tt>&lt;label&gt;</tt> untuk melakukan hal yang sama, tapi
		Anda harus mencari <tt>ID</tt> yang benar pada kotak teks (atau
		<tt>&lt;input&gt;</tt> dalam HTML) karena komponen Prado dapat/mungkin menyajikan
		nilai <tt>ID</tt> secara berbeda dalam output HTML.
	</p>

	<p id="80061" class="block-content">Pasangan komponen berikutnya adalah sama dan mendefinisikan
		kotak teks guna menampung nilai dolar yang akan dikonversi.
		<tt>TLabel</tt> dengan nilai <tt>ID</tt> "total" mendefinisikan label sederhana.
		Catatan bahwa properti <tt>ForControl</tt> tidak ada. Ini berarti bahwa label ini
		merupakan sebuah label yang akan dipakai untuk menampilkan jumlah total yang dikonversi.
	</p>

	<p id="80062" class="block-content">Komponen terakhir adalah
		<com:DocLink ClassPath="System.Web.UI.WebControls.TButton" Text="TButton" />
		yang akan diklik oleh pengguna untuk menghitung hasil. Properti <tt>Text</tt>
		menetapkan label tombol.
	</p>

	<h1 id="16004">Mengimplementasikan Konversi Kurs</h1>

	<p id="80063" class="block-content">Jika Anda mencoba mengklik pada tombol "Convert" kemudian halaman akan menyegarkan
		dan tidak melakukan apapun. Agar tombol melakukan beberapa pekerjaan, kita perlu
		menambahkan "Home.php" ke di mana "Home.page" berada. Kelas <tt>Home</tt> harus
		memperluas <com:DocLink ClassPath="System.Web.UI.TPage" Text="TPage" />, basis kelas standar untuk semua halaman Prado.
	</p>
<com:TTextHighlighter Language="php" CssClass="source block-content" id="code3">
&lt;?php
class Home extends TPage
{

}
?&gt;
</com:TTextHighlighter>
	<p id="1111" class="block-content">
		Prado menggunakan metode PHP <tt>__autoload</tt> untuk mengambil kelas. Konvensi
		adalah untuk menggunakan nama kelas dengan ekstensi ".php" sebagai nama file.
	</p>

	<p id="80064" class="block-content">Sejauh ini tidak ada hal menarik mengenai Prado, kita hanya mendeklarasikan beberapa
		"komponen web" dalam beberapa file template bernama Home.page dan membuat
		sebuah file "Home.php" dengan kelas <tt>Home</tt>. Sedikit yang lebih menarik adalah
		arsitektur kendali-event Prado seperti yang akan kita lihat nanti.
	</p>

	<p id="80065" class="block-content">Kita menginginkan bahwa saat pengguna mengklik tombol "Convert", kita mengambil
		nilai dalam kotak teks, melakukan beberapa perhitungan dan menyajikan kepada pengguna dengan
		total nilai yang dikonversi. Untuk menangani pengguna mengklik pada tombo "Convert",
		kita cukup menambahkan sebuah properti <tt>OnClick</tt> ke tombol "Convert" dalam
	 	template "Home.page" dan menambahkan metode pengendali event terkait dalam "Home.php".
	</p>
<com:TTextHighlighter Language="prado" CssClass="source block-content" id="code4">
&lt;com:TButton Text="Convert" OnClick="convert_clicked" /&gt;
</com:TTextHighlighter>
	<p id="222" class="block-content">
		Nilai dari <tt>OnClick</tt>, "<tt>convert_clicked</tt>", akan menjadi nama metode
		dalam "Home.php" yang akan dipanggil saat pengguna mengklik tombol "Convert".
	</p>
<com:TTextHighlighter Language="php" CssClass="source block-content" id="code5">
class Home extends TPage
{
    public function convert_clicked($sender, $param)
    {
        $rate = floatval($this->currencyRate->Text);
        $dollars = floatval($this->dollars->Text);
        $this->total->Text = $rate * $dollars;
    }
}
</com:TTextHighlighter>
<div id="3332" class="block-content">
	<p id="333">
		Jika Anda menjalankan aplikasi dalam web browser Anda, masukkan beberapa nilai
		dan klik tombol "Convert" kemudian Anda akan melihat nilai yang dihitung ditampilkan
		di dekat label "Amount in Other Currency".
	</p>

	<p id="80066">Dalam metode "<tt>convert_clicked</tt>" parameter pertama, <tt>$sender</tt>,
		berhubungan dengan obyek yang memunculkan event, dalam hal ini, tombol
		"Convert". Parameter kedua, <tt>$param</tt> berisi data tambahan lain
		di mana obyek <tt>$sender</tt> yang ingin ditambahkan.
	</p>

	<p id="80067">Sekarang kita akan memeriksa, tiga baris yang mengimplementasikan konversi
		kurs sederhana dalam metode "<tt>convert_clicked</tt>".
	</p>
</div>
<com:TTextHighlighter Language="php" CssClass="source block-content" id="code6" >
$rate = floatval($this->currencyRate->Text);
</com:TTextHighlighter>
	<p id="444" class="block-content">
		Pernyataan <tt>$this->currencyRate</tt> berhubungan dengan komponen
		<tt>TTextBox</tt> dengan nilai <tt>ID</tt> "currencyRate" dalam template
		"Home.page". Properti <tt>Text</tt> dari <tt>TTextBox</tt> berisi
		nilai yang dimasukan oleh pengguna. Maka kita memperoleh nilai ini dengan
		<tt>$this->currencyRate->Text</tt> yang kita konversi nilainya ke nilai
		pecahan.
	</p>
<com:TTextHighlighter Language="php" CssClass="source block-content" id="code7">
$dollars = floatval($this->dollars->Text);
</com:TTextHighlighter>
<div id="5551" class="block-content">
	<p id="555">
		Baris berikutnya melakukan hal yang mirip, ia mengambil nilai pengguna
		dari <tt>TTextBox</tt> dengan nilai <tt>ID</tt> "dollars dang mengubahnya
		ke nilai pecahan.
	</p>

	<p id="80068">Baris ketiga menghitung jumlah baru dan menyetel nilai ini dalam properti
		<tt>Text</tt> dari <tt>TLabel</tt> dengan <tt>ID="total"</tt>.
		Selanjutnya, kita tampilkan jumlah baru ke pengguna dalam label.
	</p>
</div>
<com:TTextHighlighter Language="php" CssClass="source block-content" id="code8">
$this->total->Text = $rate * $dollars;
</com:TTextHighlighter>

	<h1 id="16005">Menambahkan Validasi</h1>
	<p id="80069" class="block-content">Cara kita mengubah nilai yang dimasukan oleh pengguna ke pecahan memastikan bahwa jumlah total selalu sebuah angka. Maka pengguna bebas untuk memasukan apapun yang mereka sukai, bahkan mereka dapat memasukan huruf. Pengalaman pengguna dalam pemakaian aplikasi dapat ditingkatkan dengan menambahkan validator untuk memberitahu pengguna atas nilai yang dibolehkan dalam kurs mata uang dan jumlah yang akan dihitung.
	</p>

	<p id="80070">Untuk kurs mata uang, kita harus memastikan bahwa</p>
		<ol id="o111" class="block-content">
			<li>pengguna memasukan sebuah nilai,</li>
			<li>kurs mata uang adalah angka yang benar,</li>
			<li>kurs mata uang adalah positif.</li>
		</ol>
	<p id="666" class="block-content">
	 Untuk memastikan poin 1 kita menambahkan satu
	<com:DocLink ClassPath="System.Web.UI.WebControls.TRequiredFieldValidator" Text="TRequiredFieldValidator" />. Untuk memastikan poin 2 dan 3, kita menambahkan satu <com:DocLink ClassPath="System.Web.UI.WebControls.TCompareValidator" Text="TCompareValidator" />. Kita dapat menambahkan validator ini di mana saja di dalam template "Home.page". Perincian selanjutnya mengenai validator ini dan validator lainnya dapat ditemukan dalam halaman
	<a href="?page=Controls.Validation">Validation Controls</a>.
	</p>
<com:TTextHighlighter Language="prado" CssClass="source block-content" id="code9">
&lt;com:TRequiredFieldValidator
	ControlToValidate="currencyRate"
	ErrorMessage="Please enter a currency rate." /&gt;
&lt;com:TCompareValidator
	ControlToValidate="currencyRate"
	DataType="Float"
	ValueToCompare="0"
	Operator="GreaterThan"
	ErrorMessage="Please enter a positive currency rate." /&gt;
</com:TTextHighlighter>

	<p id="80071" >Untuk jumlah yang dihitung, kita harus memastikan bahwa</p>
		<ol id="o222" class="block-content">
			<li>pengguna memasukan sebuah nilai,</li>
			<li>nilai adalah angka yang benar (tidak menyertakan tanda kurs atau dolar).</li>
		</ol>
	<p id="777" class="block-content">
	Untuk memastikan 1 kita cukup menambahkan <tt>TRequiredFieldValidator</tt> lainnya, untuk 2
	kita dapat menggunakan
	<com:DocLink ClassPath="System.Web.UI.WebControls.TDataTypeValidator" Text="TDataTypeValidator" />. Untuk memudahkan kita hanya membolehkan pengguna untuk memasukan sebuah angka untuk jumlah yang ingin mereka ubah.
	</p>
<com:TTextHighlighter Language="prado" CssClass="source block-content" id="code9a">
&lt;com:TRequiredFieldValidator
	ControlToValidate="dollars"
	ErrorMessage="Please enter the amount you wish to calculate." /&gt;
&lt;com:TDataTypeValidator
	ControlToValidate="dollars"
	DataType="Float"
	ErrorMessage="Please enter a number." /&gt;
</com:TTextHighlighter>
	</p>

	<p id="80072" class="block-content">Sekarang jika Anda mencoba memasukan beberapa data tidak benar dalam aplikasi atau membiarkan field kosong 
		validators akan diaktifkan dan menyajikan pesan kesalahan kepada pengguna. Catatan bahwa pesan kesalahan disajikan tanpa mengambil ulang halaman. Validator Prado standarnya memvalidasi javascript dan di dalam server. Validasi di dalam server <b>selalu dilakukan</b>. Untuk sisi server, kita harus melewati perhitungan jika validator tidak memuaskan. Ini dapat dilakukan seperti berikut.
	</p>
<com:TTextHighlighter Language="php" CssClass="source block-content" id="code10" >
public function convert_clicked($sender, $param)
{
    if($this->Page->IsValid)
    {
        $rate = floatval($this->currencyRate->Text);
        $dollars = floatval($this->dollars->Text);
        $this->total->Text = $rate * $dollars;
    }
}
</com:TTextHighlighter>

	<h1 id="16006">Meningkatkan Pengalaman Pengguna Dengan Kontrol Aktif</h1>

	<com:RequiresVersion Version="3.1a" />

	<p id="80073" class="block-content">Dalam aplikasi sederhana selanjutnya kita dapat
memperbaiki pengalaman pengguna dengan meningkatkan tanggapan aplikasi. Satu cara untuk mencapai respon tercepat adalah menghitung dan menyajikan hasil tanpa mengambil ulang seluruh halaman.
	</p>

	<p id="80074" class="block-content">Kita dapat mengganti <tt>TButton</tt> dengan pasangan Kontrol Aktif,
		<com:DocLink ClassPath="System.Web.UI.ActiveControls.TActiveButton" Text="TActiveButton" />,
		yang dapat memicu event klik di dalam server tanpa mengambil ulang halaman.
		Sebagai tambahan, kita dapat mengubah "total" <tt>TLabel</tt> dengan pasangan Kontrol Aktif,
		<com:DocLink ClassPath="System.Web.UI.ActiveControls.TActiveLabel" Text="TActiveLabel" />, dengan demikian di dalam server dapat memutakhirkan browser tanpa mengambil ulang halaman.
	</p>
<com:TTextHighlighter Language="prado" CssClass="source block-content" id="code11">
<div class="total-field">
    <span class="total-label">Amount in Other Currency:</span>
         &lt;com:TActiveLabel ID="total" CssClass="result" /&gt;
    </div>
    <div class="convert-button">
        &lt;com:TActiveButton Text="Convert" OnClick="convert_clicked" /&gt;
</div>
</com:TTextHighlighter>
	<p id="1232" class="block-content">
		Logika di dalam server tetap sama, kita hanya perlu mengimpor
		ruang nama Kontrol Aktif karena secara standar tidak disertakan. Kita menambahkan baris berikut ke awal "Home.php".
	</p>
<com:TTextHighlighter Language="php" CssClass="source block-content" id="code12">
Prado::using('System.Web.UI.ActiveControls.*');
</com:TTextHighlighter>

	<p id="80075" class="block-content">Jika Anda mencoba aplikasi sekarang, Anda akan melihat bahwa halaman tidak perlu lagi mengambil ulang untuk menghitung dan menampilkan jumlah total yang dikonversi.
		Akan tetapi, karena di sana tidak ada pengambilan halaman ulang, tidak ada petunjuk atau tidak jelas bahwa dengan mengklik pada tombol "Convert" telah terjadi.
		Selanjutnya kita bisa memperbaiki pengalaman pengguna dengan mengunah label teks "total" menjadi "calculating..." saat pengguna mengklik tombol "Convert". Label teks "total" masih dimutakhirkan dengan jumlah perhitungan baru seperti sebelumnya.
	</p>

	<p id="80076" class="block-content">Untuk mengindikasikan bahwa perhitungan sedang berlangsung, kita dapat mengubah label teks  "total" sebagai berikut. Kita menambahkan properti <tt>ClientSide.OnLoading</tt> ke tombol "Convert" (karena tombol ini bertanggung jawab terhadap permintaan perhitungan).
	</p>
<com:TTextHighlighter Language="prado" CssClass="source block-content" id="code13">
&lt;com:TActiveButton Text="Convert" OnClick="convert_clicked" &gt;
    &lt;prop:ClientSide.OnLoading&gt;
        $('&lt;%= $this->total->ClientID %&gt;').innerHTML = "calculating..."
    &lt;/prop:ClientSide.OnLoading&gt;
&lt;/com:TActiveButton&gt;
</com:TTextHighlighter>

	<p id="80077" class="block-content"><tt>ClientSide.OnLoading</tt> dan berbagai
	<com:DocLink ClassPath="System.Web.UI.ActiveControls.TCallbackClientSide" Text="properti lainnya" /> menerima blok javascript sebagai konten atau nilainya.
	Kode javascript <tt>$('...')</tt> adalah fungsi javascript sama dengan <tt>document.getElementById('...')</tt> yang mengambil string dengan ID dari elemen HTML. Karena Prado menyajikan ID komponennya, kita perlu menggunakan ID yang disajikan dari label "total", yakni <tt>$this->total->ClientID</tt>. Kita tempatkan sedikit kode ini ini di dalam <tt>&lt;%= %&gt;</tt> untuk memperoleh ID HTML yang disajikan untuk label "total". Kode javascript sisanya <tt>innerHTML = "calculating..."</tt> cukup mengubah konten label "total".
	</p>

	<h1 id="16007">Menambahkan Sentuhan Akhir</h1>
	<p id="80078" class="block-content">Sejauh ini kita telah membangun aplikasi web pengubah kurs sederhana dengan sedikit perhatian terhadap penampilannya. Sekarang kita dapat menambahkan stylesheet guna meningkatkan penampilan secara keseluruhan aplikasi. Kita cukup menambahkan inline stylesheet dengan kode template atau kita membuat sebuah "tema".
	</p>

	<p id="80079" class="block-content">Untuk membuat dan menggunakan tema dengan aplikasi Prado, kita membuat direktori baru "themes/Basic" dalam direktori <tt>currency-converter</tt>.
		Anda mungkin perlu untuk membuat direktori <tt>themes</tt> lebih dahulu. Direktori apapun di dalam <tt>themes</tt> dianggap sebagai tema dengan nama temanya adalah nama direktori. Lihat
		<a href="?page=Advanced.Themes">Tema dan Skin</a> untuk lebih jelasnya.
	</p>

	<p id="80080" class="block-content">Kita cukup dengan membuat file CSS bernama "common.css" dan menyimpannya dalam direktori
		<tt>themes/Basic</tt>. Kemudian kita menambahkan kode berikut ke awal "Home.page" (kita menambahkan sedikit kode HTML juga).
	</p>
<com:TTextHighlighter Language="prado" CssClass="source block-content" id="code14">
&lt;%@ Theme="Basic" %&gt;
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" >
&lt;com:THead Title="Currency Converter" /&gt;
<body>
</com:TTextHighlighter>
	<p id="4334" class="block-content">
		Baris pertama <tt>&lt;%@ Theme="Basic" %&gt;</tt> mendefinisikan tema
		yang dipakai untuk halaman ini. 
		<com:DocLink ClassPath="System.Web.UI.WebControls.THead" Text="THead" />
		merujuk ke elemen HTML <tt>&lt;head&gt;</tt>. Sebagai tambahan terhadap
		tampilan properti <tt>Title</tt> pada <tt>THead</tt>, semua file CSS
		dalam direktori <tt>themes/Basic</tt> juga disajikan/dikaitkan untuk
		halaman saat ini. Aplikasi web pengubah kurs final kita terlihat seperti
		berikut.
		<img src=<%~ example2.png %> class="figure" />
		Tutorial pengenalan lengkap terhadap kerangka kerja aplikasi web Prado.
	</p>
</com:TContent>
